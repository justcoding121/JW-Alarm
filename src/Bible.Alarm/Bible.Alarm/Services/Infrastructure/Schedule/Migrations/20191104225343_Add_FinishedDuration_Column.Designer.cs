// <auto-generated />
using System;
using Bible.Alarm.Services;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Bible.Alarm.Services.Infrastructure.Schedule.Migrations
{
    [DbContext(typeof(ScheduleDbContext))]
    [Migration("20191104225343_Add_FinishedDuration_Column")]
    partial class Add_FinishedDuration_Column
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity("Bible.Alarm.Models.AlarmMusic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AlarmScheduleId");

                    b.Property<string>("LanguageCode");

                    b.Property<int>("MusicType");

                    b.Property<string>("PublicationCode");

                    b.Property<bool>("Repeat");

                    b.Property<int>("TrackNumber");

                    b.HasKey("Id");

                    b.HasIndex("AlarmScheduleId")
                        .IsUnique();

                    b.ToTable("AlarmMusic");
                });

            modelBuilder.Entity("Bible.Alarm.Models.AlarmSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("AlwaysPlayFromStart");

                    b.Property<int>("CurrentPlayItem");

                    b.Property<int>("DaysOfWeek");

                    b.Property<int>("Hour");

                    b.Property<bool>("IsEnabled");

                    b.Property<int>("Minute");

                    b.Property<bool>("MusicEnabled");

                    b.Property<string>("Name");

                    b.Property<int>("NumberOfChaptersToRead");

                    b.Property<int>("Second");

                    b.Property<int>("SnoozeMinutes");

                    b.HasKey("Id");

                    b.ToTable("AlarmSchedules");
                });

            modelBuilder.Entity("Bible.Alarm.Models.BibleReadingSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AlarmScheduleId");

                    b.Property<int>("BookNumber");

                    b.Property<int>("ChapterNumber");

                    b.Property<TimeSpan>("FinishedDuration");

                    b.Property<string>("LanguageCode");

                    b.Property<string>("PublicationCode");

                    b.HasKey("Id");

                    b.HasIndex("AlarmScheduleId")
                        .IsUnique();

                    b.ToTable("BibleReadingSchedules");
                });

            modelBuilder.Entity("Bible.Alarm.Models.GeneralSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Key");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("GeneralSettings");
                });

            modelBuilder.Entity("Bible.Alarm.Models.AlarmMusic", b =>
                {
                    b.HasOne("Bible.Alarm.Models.AlarmSchedule", "AlarmSchedule")
                        .WithOne("Music")
                        .HasForeignKey("Bible.Alarm.Models.AlarmMusic", "AlarmScheduleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bible.Alarm.Models.BibleReadingSchedule", b =>
                {
                    b.HasOne("Bible.Alarm.Models.AlarmSchedule", "AlarmSchedule")
                        .WithOne("BibleReadingSchedule")
                        .HasForeignKey("Bible.Alarm.Models.BibleReadingSchedule", "AlarmScheduleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
